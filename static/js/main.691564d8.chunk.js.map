{"version":3,"sources":["sidebar/styles.js","sidebaritem/styles.js","sidebaritem/sidebarItem.js","helpers.js","sidebar/sidebar.js","editor/styles.js","editor/editor.js","App.js","serviceWorker.js","index.js"],"names":["styles","theme","root","backgroundColor","palette","background","paper","height","position","left","width","boxShadow","newChatBtn","borderRadius","unreadMessage","color","top","right","newNoteBtn","borderBottom","sidebarContainer","marginTop","boxSizing","float","overflowY","overflowX","newNoteInput","margin","outline","border","paddingLeft","newNoteSubmitBtn","listItem","cursor","textSection","maxWidth","deleteIcon","SidebarItemComponent","selectNote","n","i","props","deleteNote","note","window","confirm","title","str","this","_index","_note","classes","selectedNoteIndex","key","ListItem","className","selected","alignItems","onClick","ListItemText","primary","secondary","body","substring","replace","React","Component","withStyles","SidebarComponent","newNoteBtnClick","setState","addingNote","state","updateTitle","txt","newNote","notes","Button","type","placeholder","onKeyUp","e","target","value","List","map","Divider","titleInput","padding","fontSize","editIcon","editorContainer","EditorComponent","componentDidMount","text","selectedNote","id","componentDidUpdate","updateBody","val","a","update","b","c","d","h","apply","f","g","arguments","clearTimeout","setTimeout","debounce","noteUpdate","onChange","firebase","require","App","firestore","collection","onSnapshot","serverUpdate","docs","_doc","data","index","noteObj","doc","timestamp","FieldValue","serverTimestamp","add","newFromDB","newID","newNoteIndex","indexOf","filter","noteIndex","length","delete","Boolean","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.691564d8.chunk.js","sourcesContent":["const styles = theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      height: 'calc(100% - 35px)',\r\n      position: 'absolute',\r\n      left: '0',\r\n      width: '300px',\r\n      boxShadow: '0px 0px 2px black'\r\n    },\r\n    newChatBtn: {\r\n      borderRadius: '0px'\r\n    },\r\n    unreadMessage: {\r\n      color: 'red',\r\n      position: 'absolute',\r\n      top: '0',\r\n      right: '5px'\r\n    },\r\n    newNoteBtn: {\r\n      width: '100%',\r\n      height: '35px',\r\n      borderBottom: '1px solid black',\r\n      borderRadius: '0px',\r\n      backgroundColor: '#29487d',\r\n      color: 'white',\r\n      '&:hover': {\r\n        backgroundColor: '#88a2ce'\r\n      }\r\n    },\r\n    sidebarContainer: {\r\n      marginTop: '0px',\r\n      width: '300px',\r\n      height: '100%',\r\n      boxSizing: 'border-box',\r\n      float: 'left',\r\n      overflowY: 'scroll',\r\n      overflowX: 'hidden'\r\n    },\r\n    newNoteInput: {\r\n      width: '100%',\r\n      margin: '0px',\r\n      height: '35px',\r\n      outline: 'none',\r\n      border: 'none',\r\n      paddingLeft: '5px',\r\n      '&:focus': {\r\n        outline: '2px solid rgba(81, 203, 238, 1)'\r\n      }\r\n    },\r\n    newNoteSubmitBtn: {\r\n      width: '100%',\r\n      backgroundColor: '#28787c',\r\n      borderRadius: '0px',\r\n      color: 'white'\r\n    }\r\n  });\r\n  \r\n  export default styles;","const styles = theme => ({\r\n    listItem: {\r\n      cursor: 'pointer'\r\n    },\r\n    textSection: {\r\n      maxWidth: '85%'\r\n    },  \r\n    deleteIcon: {\r\n      position: 'absolute',\r\n      right: '5px',\r\n      top: 'calc(50% - 15px)',\r\n      '&:hover': {\r\n        color: 'red'\r\n      }\r\n    }\r\n  });\r\n  \r\n  export default styles;","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { removeHTMLTags } from '../helpers';\r\n\r\nclass SidebarItemComponent extends React.Component {\r\n\r\n  render() {\r\n\r\n    const { _index, _note, classes, selectedNoteIndex } = this.props;\r\n\r\n    return(\r\n      <div key={_index}>\r\n        <ListItem\r\n          className={classes.listItem}\r\n          selected={selectedNoteIndex === _index}\r\n          alignItems='flex-start'>\r\n            <div \r\n              className={classes.textSection}\r\n              onClick={() => this.selectNote(_note, _index)}>\r\n                <ListItemText\r\n                  primary={_note.title}\r\n                  secondary={removeHTMLTags(_note.body.substring(0, 30)) + '...'}></ListItemText>\r\n            </div>\r\n            <DeleteIcon onClick={() => this.deleteNote(_note)}\r\n              className={classes.deleteIcon}></DeleteIcon>\r\n        </ListItem>\r\n      </div>\r\n    );\r\n  }\r\n  selectNote = (n, i) => this.props.selectNote(n, i);\r\n  deleteNote = (note) => {\r\n    if(window.confirm(`Are you sure you want to delete: ${note.title}`)) {\r\n      this.props.deleteNote(note);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(SidebarItemComponent);","\r\nexport default function debounce(a,b,c){\r\n    var d,e;\r\n    return function(){\r\n      function h(){\r\n        d=null;\r\n        c||(e=a.apply(f,g));\r\n      }\r\n      var f=this,g=arguments;\r\n      return (clearTimeout(d),d=setTimeout(h,b),c&&!d&&(e=a.apply(f,g)),e)\r\n    }\r\n  }\r\n  \r\n  export function removeHTMLTags (str) {\r\n    return str.replace(/<[^>]*>?/gm, '');\r\n  };","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles';\r\nimport List from '@material-ui/core/List';\r\nimport { Divider, Button } from '@material-ui/core';\r\nimport SidebarItemComponent from '../sidebaritem/sidebarItem';\r\n\r\nclass SidebarComponent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      addingNote: false,\r\n      title: null\r\n    };\r\n  }\r\n  render() {\r\n\r\n    const { notes, classes, selectedNoteIndex } = this.props;\r\n\r\n    if(notes) {\r\n      return(\r\n        <div className={classes.sidebarContainer}>\r\n          <Button\r\n            onClick={this.newNoteBtnClick}\r\n            className={classes.newNoteBtn}>{this.state.addingNote ? 'Cancel' : 'New Note'}</Button>\r\n            {\r\n              this.state.addingNote ? \r\n              <div>\r\n                <input type='text'\r\n                  className={classes.newNoteInput}\r\n                  placeholder='Enter note title'\r\n                  onKeyUp={(e) => this.updateTitle(e.target.value)}>\r\n                </input>\r\n                <Button \r\n                  className={classes.newNoteSubmitBtn}\r\n                  onClick={this.newNote}>Submit Note</Button>\r\n              </div> :\r\n              null\r\n            }\r\n            <List>\r\n              {\r\n                notes.map((_note, _index) => {\r\n                  return(\r\n                    <div key={_index}>\r\n                      <SidebarItemComponent\r\n                        _note={_note}\r\n                        _index={_index}\r\n                        selectedNoteIndex={selectedNoteIndex}\r\n                        selectNote={this.selectNote}\r\n                        deleteNote={this.deleteNote}>\r\n                      </SidebarItemComponent>\r\n                      <Divider></Divider>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </List>\r\n        </div>\r\n      );\r\n    } else {\r\n      return(<div></div>);\r\n    }\r\n  }\r\n\r\n  newNoteBtnClick = () => {\r\n    this.setState({ title: null, addingNote: !this.state.addingNote });\r\n  }\r\n  updateTitle = (txt) => {\r\n    this.setState({ title: txt });\r\n  }\r\n  newNote = () => {\r\n    this.props.newNote(this.state.title);\r\n    this.setState({ title: null, addingNote: false });\r\n  }\r\n  selectNote = (n, i) => this.props.selectNote(n, i);\r\n  deleteNote = (note) => this.props.deleteNote(note);\r\n\r\n}\r\n\r\nexport default withStyles(styles)(SidebarComponent);","const styles = theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      height: 'calc(100% - 35px)',\r\n      position: 'absolute',\r\n      left: '0',\r\n      width: '300px',\r\n      boxShadow: '0px 0px 2px black'\r\n    },\r\n    titleInput: {\r\n      height: '50px',\r\n      boxSizing: 'border-box',\r\n      border: 'none',\r\n      padding: '5px',\r\n      fontSize: '24px',\r\n      width: 'calc(100% - 300px)',\r\n      backgroundColor: '#29487d',\r\n      color: 'white',\r\n      paddingLeft: '50px'\r\n    },\r\n    editIcon: {\r\n      position: 'absolute',\r\n      left: '310px',\r\n      top: '12px',\r\n      color: 'white',\r\n      width: '10',\r\n      height: '10'\r\n    },\r\n    editorContainer: {\r\n      height: '100%',\r\n      boxSizing: 'border-box'\r\n    }\r\n  });\r\n  \r\n  export default styles;","import React from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport debounce from '../helpers';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles';\r\n\r\nclass EditorComponent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      text: '',\r\n      title: '',\r\n      id: ''\r\n    };\r\n  }\r\n\r\n  \r\n  componentDidMount = () => {\r\n    this.setState({\r\n      text: this.props.selectedNote.body,\r\n      title: this.props.selectedNote.title,\r\n      id: this.props.selectedNote.id\r\n    });\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    if(this.props.selectedNote.id !== this.state.id) {\r\n      this.setState({\r\n        text: this.props.selectedNote.body,\r\n        title: this.props.selectedNote.title,\r\n        id: this.props.selectedNote.id\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return(\r\n      <div className={classes.editorContainer}>\r\n        <BorderColorIcon className={classes.editIcon}></BorderColorIcon>\r\n        <input\r\n          className={classes.titleInput}\r\n          placeholder='Note title...'\r\n          value={this.state.title ? this.state.title : ''}\r\n          onChange={(e) => this.updateTitle(e.target.value)}>\r\n        </input>\r\n        <ReactQuill \r\n          value={this.state.text} \r\n          onChange={this.updateBody}>\r\n        </ReactQuill>\r\n      </div>\r\n    );\r\n  }\r\n  updateBody = async (val) => {\r\n    await this.setState({ text: val });\r\n    this.update();\r\n  };\r\n  updateTitle = async (txt) => {\r\n    await this.setState({ title: txt });\r\n    this.update();\r\n  }\r\n  update = debounce(() => {\r\n    this.props.noteUpdate(this.state.id, {\r\n      title: this.state.title,\r\n      body: this.state.text\r\n    })\r\n  }, 1500);\r\n}\r\n\r\nexport default withStyles(styles)(EditorComponent);","import React from \"react\";\nimport SidebarComponent from \"./sidebar/sidebar\";\nimport EditorComponent from \"./editor/editor\";\nimport \"./App.css\";\n\nconst firebase = require(\"firebase\");\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedNoteIndex: null,\n      selectedNote: null,\n      notes: null,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"app-container\">\n        <SidebarComponent\n          selectedNoteIndex={this.state.selectedNoteIndex}\n          notes={this.state.notes}\n          deleteNote={this.deleteNote}\n          selectNote={this.selectNote}\n          newNote={this.newNote}\n        ></SidebarComponent>\n        {this.state.selectedNote ? (\n          <EditorComponent\n            selectedNote={this.state.selectedNote}\n            selectedNoteIndex={this.state.selectedNoteIndex}\n            notes={this.state.notes}\n            noteUpdate={this.noteUpdate}\n          ></EditorComponent>\n        ) : null}\n      </div>\n    );\n  }\n\n  componentDidMount = () => {\n    firebase\n      .firestore()\n      .collection(\"notes\")\n      .onSnapshot((serverUpdate) => {\n        const notes = serverUpdate.docs.map((_doc) => {\n          const data = _doc.data();\n          data[\"id\"] = _doc.id;\n          return data;\n        });\n        \n        this.setState({ notes: notes });\n      });\n  };\n\n  selectNote = (note, index) =>\n    this.setState({ selectedNoteIndex: index, selectedNote: note });\n  noteUpdate = (id, noteObj) => {\n    firebase.firestore().collection(\"notes\").doc(id).update({\n      title: noteObj.title,\n      body: noteObj.body,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n  };\n  newNote = async (title) => {\n    const note = {\n      title: title,\n      body: \"\",\n    };\n    const newFromDB = await firebase.firestore().collection(\"notes\").add({\n      title: note.title,\n      body: note.body,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    const newID = newFromDB.id;\n    await this.setState({ notes: [...this.state.notes, note] });\n    const newNoteIndex = this.state.notes.indexOf(\n      this.state.notes.filter((_note) => _note.id === newID)[0]\n    );\n    this.setState({\n      selectedNote: this.state.notes[newNoteIndex],\n      selectedNoteIndex: newNoteIndex,\n    });\n  };\n  deleteNote = async (note) => {\n    const noteIndex = this.state.notes.indexOf(note);\n    await this.setState({\n      notes: this.state.notes.filter((_note) => _note !== note),\n    });\n    if (this.state.selectedNoteIndex === noteIndex) {\n      this.setState({ selectedNoteIndex: null, selectedNote: null });\n    } else {\n      this.state.notes.length >= 1\n        ? this.selectNote(\n            this.state.notes[this.state.selectedNoteIndex - 1],\n            this.state.selectedNoteIndex - 1\n          )\n        : this.setState({ selectedNoteIndex: null, selectedNote: null });\n    }\n\n    firebase.firestore().collection(\"notes\").doc(note.id).delete();\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAfNoz3CY8cJcjR30WpP41maZONWWpV9FI\",\n  authDomain: \"evernotereact.firebaseapp.com\",\n  databaseURL: \"https://evernotereact.firebaseio.com\",\n  projectId: \"evernotereact\",\n  storageBucket: \"evernotereact.appspot.com\",\n  messagingSenderId: \"280669860495\",\n  appId: \"1:280669860495:web:2f2800cd5d78ab5e25f6fa\",\n  measurementId: \"G-NY3NCG2JLN\",\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}